package midlevel;

public class Silver extends Member{ // extends Member 상속 문법 // 멤버의 내용을 상속 받고, 실버의 내용까지 추가된거라서 실버가 더 큼
//생성자는 멤버로 안옮겼다. 이름이 달라서 못옮김
	
	public Silver(int id, String name, int point) {

		// 3. 멤버 생성자가 필요함.
//		super(); // 명시적 수퍼콜 (안보이면 묵시적 수퍼콜)
		super(id,name,point); // super(); 자신의 부모클래스의 생성자를 콜해주세요. 라는 뜻 
								// super에게 전달하는 식으로 해결을 본다.
		

		
//		this.setId(id);
//		this.setName(name);
//		this.setPoint(point); // 2. setter 활용 // 멤버콜이 너무 여러번 일어나야해서 불편
		
		
		// this.id = id;
		// this.name = name;
		// this.point = point;
		// 낫 비저블 = 1. 접근 제한자 이슈가 생긴 것
		// 상속은 됐지만 private 때문에 자신의 클래스(멤버클래스) 안에서만 활동하기때문에 여기(실버클래스)는 외부임.
		// public으로 수정하면 되지만 정보은닉이 불가능해짐. 캡슐화가 깨짐
	}
	
	// 추상메서드 해결법 
	// 1. Sliver 자체를 추상 클래스로 만들기. / abstract  붙이면 해결 됨. > Sliver는 new 해야해서 쓸 수 없음.
	// 2. 추상메서드 안에 내용이 없으면 에러남. -> 내용 넣기
	
	
	public double getBonus() {
		return this.getPoint() * 0.02;  // private 때문에 this.point 안됨. 
	}
		
	
}
