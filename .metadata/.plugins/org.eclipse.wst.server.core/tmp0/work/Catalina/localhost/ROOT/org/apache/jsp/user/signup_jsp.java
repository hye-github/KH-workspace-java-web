/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-11-04 08:29:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class signup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <title>Sign</title>\r\n");
      out.write("    <link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"/resource/duck.ico\">\r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.6.1.min.js\"\r\n");
      out.write("        integrity=\"sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=\" crossorigin=\"anonymous\">\r\n");
      out.write("        </script>\r\n");
      out.write("    <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("        integrity=\"sha384-iYQeCzEYFbKjA/T2uDLTpkwGzCiq6soy8tYaI1GyVh/UjpbCx/TYkiZhlZB6+fzT\" crossorigin=\"anonymous\">\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.1/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("        integrity=\"sha384-u1OknCvxWvY5kfmNBILK2hRnQC3Pr17a+RTT6rIHI7NnikvbZlHgTPOOmMi466C8\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <script src=\"//cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("    <script src=\"https://kit.fontawesome.com/be3915f36a.js\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"/css/base.css\" type=\"text/css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        * {\r\n");
      out.write("            box-sizing: border-box;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .container {\r\n");
      out.write("            margin-top: 20px;\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border: 1px solid #808080;\r\n");
      out.write("            width: 350px;\r\n");
      out.write("            height: 565px;\r\n");
      out.write("            min-width: 350px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a {\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        a:hover {\r\n");
      out.write("            cursor: pointer\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input {\r\n");
      out.write("            padding-left: 5px;\r\n");
      out.write("            padding-right: 5px;\r\n");
      out.write("            width: 250px;\r\n");
      out.write("            border: 0px;\r\n");
      out.write("            border-bottom: 1px solid black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        input:focus {\r\n");
      out.write("            outline: none;\r\n");
      out.write("            box-shadow: 0px 1px 0px 0px black;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .error_msg {\r\n");
      out.write("            height: 12px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        #user_email_msg,\r\n");
      out.write("        #user_pw_re_msg,\r\n");
      out.write("        #user_phone_msg {\r\n");
      out.write("            color: #001A41;\r\n");
      out.write("            display: none;\r\n");
      out.write("			letter-spacing : -1px;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <main>\r\n");
      out.write("        <div class=\"container\" align=\"center\">\r\n");
      out.write("            <!-- 회원가입 폼 -->\r\n");
      out.write("            <form id=\"form_sign\">\r\n");
      out.write("                <div class=\"row justify-content-center\">\r\n");
      out.write("                    <div class=\"col-12 text-end\">\r\n");
      out.write("                        <a><i class=\"fa-solid fa-x\" style=\"color:#808080\"></i></a>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-12 gy-4\">\r\n");
      out.write("                        <div class=\"text_title\">일반 회원가입</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-12 gy-3\">\r\n");
      out.write("                        <div class=\"text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span style=\"color:#808080; font-size:x-small\">이메일</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <input type=\"text\" name=\"user_email\" id=\"user_email\" placeholder=\"이메일을 입력하세요.\" maxlength=\"40\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-2\">\r\n");
      out.write("                        <div class=\"error_msg text_mini text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span class=\"error_msg_display\" id=\"user_email_msg\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-4\">\r\n");
      out.write("                        <div class=\"text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span style=\"color:#808080; font-size:x-small\">비밀번호</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <input type=\"password\" name=\"user_pw\" id=\"user_pw\" placeholder=\"비밀번호를 입력하세요.\" maxlength=\"20\">\r\n");
      out.write("                        <div class=\"text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span style=\"color:#808080; font-size:x-small\">비밀번호 확인</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <input type=\"password\" name=\"user_pw_re\" id=\"user_pw_re\" placeholder=\"동일 비밀번호를 입력하세요.\"\r\n");
      out.write("                            maxlength=\"16\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-2\">\r\n");
      out.write("                        <div class=\"error_msg text_mini text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span class=\"error_msg_display\" id=\"user_pw_re_msg\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-4\">\r\n");
      out.write("                        <div class=\"text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span style=\"color:#808080; font-size:x-small\">연락처</span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <input type=\"text\" name=\"user_phone\" id=\"user_phone\" placeholder=\"연락처를 입력하세요.\" maxlength=\"11\" oninput=\"this.value = this.value.replace(/[^0-9.]/g, '').replace(/(\\..*)\\./g, '$1');\">\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-2\">\r\n");
      out.write("                        <div class=\"error_msg text_mini text-start\" style=\"width:250px\">\r\n");
      out.write("                            <span class=\"error_msg_display\" id=\"user_phone_msg\"></span>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("\r\n");
      out.write("                    <div class=\"col-12 gy-4\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn_base\" id=\"btn_sign\">회원가입</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <script>\r\n");
      out.write("            // 떨림 애니메이션\r\n");
      out.write("            function wobble(element) {\r\n");
      out.write("                let order = [0, -8, 8, -4, 4, -2, 2, -1, 1, 0];\r\n");
      out.write("                let seq = [];\r\n");
      out.write("                order.forEach(function (y) { seq.push({ transform: \"translate(0,\" + y + \"px)\" }); });\r\n");
      out.write("                element.animate(seq, { duration: 300 });\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 유효성 검사 (공백 확인)\r\n");
      out.write("            function isFilled(element1, element2, element3, element4) {\r\n");
      out.write("                if (element1.val() == \"\") { wobble((element1)[0]); element1.focus(); }\r\n");
      out.write("                else if (element2.val() == \"\") { wobble((element2)[0]); element2.focus(); }\r\n");
      out.write("                else if (element3.val() == \"\") { wobble((element3)[0]); element3.focus(); }\r\n");
      out.write("                else if (element4.val() == \"\") { wobble((element4)[0]); element4.focus(); }\r\n");
      out.write("                else { return true; }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            //  회원가입 함수\r\n");
      out.write("            function trySign() {\r\n");
      out.write("                $.post(\"/sign.user\", $(\"#form_sign\").serialize())\r\n");
      out.write("                    .done((res) => {\r\n");
      out.write("                        if (res == \"true\") {\r\n");
      out.write("                            Swal.fire({ title: \"Success!\", icon: \"success\", text: \"회원가입이 되었습니다.\" })\r\n");
      out.write("                                .then((result) => {\r\n");
      out.write("                                    if (result.isConfirmed) { location.reload(); }\r\n");
      out.write("                                });\r\n");
      out.write("                        } else {\r\n");
      out.write("                            Swal.fire({ title: \"Error\", icon: \"error\", text: \"오류입니다. 관리자에게 문의해주세요.\" });\r\n");
      out.write("                        }\r\n");
      out.write("                    });\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // 버튼 이벤트\r\n");
      out.write("            $(\"#btn_sign\").on(\"click\", () => {\r\n");
      out.write("                if (isFilled($(\"#user_email\"), $(\"#user_pw\"), $(\"#user_pw_re\"), $(\"#user_phone\"))) { trySign(); }\r\n");
      out.write("            \r\n");
      out.write("                    if ($(\"#user_email_msg\").css(\"color\") == \"rgb(255, 0, 0)\") { wobble($(\"#user_email\")[0]); $(\"#user_email\").focus(); }\r\n");
      out.write("                    else if ($(\"#user_pw_re_msg\").css(\"color\") == \"rgb(255, 0, 0)\"){\r\n");
      out.write("                        if($(\"#user_pw_re_msg\").html() == \"특수문자를 포함한 8~16자리 입력해주세요\") { wobble($(\"#user_pw\")[0]); $(\"#user_pw\").focus(); }\r\n");
      out.write("                        else if ($(\"#user_pw_re_msg\").html() == \"동일한 비밀번호를 입력해주세요\") { wobble($(\"#user_pw_re\")[0]); $(\"#user_pw_re\").focus(); }  \r\n");
      out.write("                    }\r\n");
      out.write("                    else if ($(\"#user_phone_msg\").css(\"color\") == \"rgb(255, 0, 0)\") { wobble($(\"#user_phone\")[0]); $(\"#user_phone\").focus(); }\r\n");
      out.write("                    \r\n");
      out.write("                    \r\n");
      out.write("                        $(\"#user_email_msg\").css(\"display\", \"none\");\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                        $(\"#user_email_msg\").html(\"이메일 형식을 아이디로 사용합니다\");\r\n");
      out.write("             \r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // 유효성 검사 Regex\r\n");
      out.write("            let emailRegex = /^[a-zA-Z0-9+-\\_.]{1,20}@[a-zA-Z0-9-]{1,15}\\.[a-zA-Z0-9-.]{1,5}$/;\r\n");
      out.write("            let pwRegex = /^(?=.*[A-Za-z\\d])(?=.*[~!@#$%^&*()+|=])[A-Za-z\\d~!@#$%^&*()+|=]{8,16}$/;\r\n");
      out.write("            let phoneRegex = /^0[\\d]{2}\\d{3,4}\\d{4}$/;\r\n");
      out.write("\r\n");
      out.write("         // 아이디 중복검사\r\n");
      out.write("            $(\"#user_email\").on(\"input\", function () {\r\n");
      out.write("                let email =  $(\"#user_email\").val();\r\n");
      out.write("\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"/duplCheck.user\",\r\n");
      out.write("                    data: { \"user_email\": email }\r\n");
      out.write("                }).done(function (resp) {\r\n");
      out.write("                    console.log(resp);\r\n");
      out.write("                    if (resp == \"true\") { // 아이디가 이미 존재하므로 사용할 수 없는 경우\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"color\", \"red\");\r\n");
      out.write("                        $(\"#user_email_msg\").html(\"이미 사용 중인 ID 입니다.\");\r\n");
      out.write("                    } else { // 아이디가 존재하지않으므로 사용할 수 있는 경우\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                        $(\"#user_email_msg\").html(\"사용 가능한 ID 입니다.\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 이메일(아이디) - 값 입력 유효성 검사 display\r\n");
      out.write("\r\n");
      out.write("            function idEvent() {\r\n");
      out.write("            	let email =  $(\"#user_email\").val();\r\n");
      out.write("\r\n");
      out.write("                $.ajax({\r\n");
      out.write("                    url: \"/duplCheck.user\",\r\n");
      out.write("                    data: { \"user_email\": email }\r\n");
      out.write("                }).done(function (resp) {\r\n");
      out.write("                    console.log(resp);\r\n");
      out.write("                    \r\n");
      out.write("                    if (resp == \"true\") { // 아이디가 이미 존재하므로 사용할 수 없는 경우\r\n");
      out.write("                    	$(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_email_msg\").css(\"color\", \"red\");\r\n");
      out.write("                        $(\"#user_email_msg\").html(\"이미 사용 중인 ID 입니다.\");\r\n");
      out.write("                    } else { // 아이디가 존재하지않으므로 사용할 수 있는 경우\r\n");
      out.write("                    	\r\n");
      out.write("                    	if ($(\"#user_email\").val() == \"\") {\r\n");
      out.write("                            $(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("                            $(\"#user_email_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                            $(\"#user_email_msg\").html(\"이메일 형식을 아이디로 사용합니다\");\r\n");
      out.write("                        } else if (!emailRegex.test($(\"#user_email\").val())) {\r\n");
      out.write("                            $(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("                            $(\"#user_email_msg\").css(\"color\", \"red\");\r\n");
      out.write("                            $(\"#user_email_msg\").html(\"이메일 형식을 확인해주세요\");\r\n");
      out.write("                        } else {\r\n");
      out.write("	                        $(\"#user_email_msg\").css(\"display\", \"block\");\r\n");
      out.write("	                        $(\"#user_email_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("	                        $(\"#user_email_msg\").html(\"사용 가능한 ID 입니다.\");\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("        	 \r\n");
      out.write("        	 \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_email\").on(\"focus\", function () {\r\n");
      out.write("                idEvent();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_email\").on(\"keyup\", function () {\r\n");
      out.write("                idEvent();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 패스워드 - 값 입력 유효성 검사 display\r\n");
      out.write("            \r\n");
      out.write("            function pwEvent() {\r\n");
      out.write("                if ($(\"#user_pw, #user_pw_re\").val() == \"\") {\r\n");
      out.write("                    $(\"#user_pw_re_msg\").css(\"display\", \"block\");\r\n");
      out.write("                    $(\"#user_pw_re_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                    $(\"#user_pw_re_msg\").html(\"특수문자를 포함한 8~16자리 입력해주세요\");\r\n");
      out.write("\r\n");
      out.write("                } else {\r\n");
      out.write("                    \r\n");
      out.write("                    if (!pwRegex.test($(\"#user_pw\").val())) {\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"color\", \"red\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").html(\"특수문자를 포함한 8~16자리 입력해주세요\");\r\n");
      out.write("                        \r\n");
      out.write("                    } else if ( ($(\"#user_pw\").val() != $(\"#user_pw_re\").val()) && $(\"#user_pw, #user_pw_re\").val() != \"\" ) {\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"color\", \"red\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").html(\"동일한 비밀번호를 입력해주세요\");\r\n");
      out.write("\r\n");
      out.write("                    } else if ( ($(\"#user_pw\").val() != $(\"#user_pw_re\").val()) && $(\"#user_pw, #user_pw_re\").val() == \"\" ) {\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"display\", \"block\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"color\", \"red\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").html(\"위에 입력한 비밀번호와 일치하지않습니다\");\r\n");
      out.write("\r\n");
      out.write("                    } else {\r\n");
      out.write("                        $(\"#user_pw_re_msg\").html(\"특수문자를 포함한 8~16자리 입력해주세요\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                        $(\"#user_pw_re_msg\").css(\"display\", \"none\");\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_pw, #user_pw_re\").on(\"focus\", function () {\r\n");
      out.write("                pwEvent();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_pw, #user_pw_re\").on(\"keyup\", function () {\r\n");
      out.write("                pwEvent();\r\n");
      out.write("            })\r\n");
      out.write("            \r\n");
      out.write("            // 전화번호 - 값 입력 유효성 검사 display\r\n");
      out.write("\r\n");
      out.write("            function phoneEvent() {\r\n");
      out.write("                if ($(\"#user_phone\").val() == \"\") {\r\n");
      out.write("                    // wobble(($(\"#user_phone\"))[0]); \r\n");
      out.write("                    // $(\"#user_phone\").focus();\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"display\", \"block\");\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                    $(\"#user_phone_msg\").html(\"연락처는 - 를 제외한 숫자만 입력해주세요\");\r\n");
      out.write("                } else if (!phoneRegex.test($(\"#user_phone\").val())) {\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"display\", \"block\");\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"color\", \"red\");\r\n");
      out.write("                    $(\"#user_phone_msg\").html(\"옳바른 번호 형식을 입력해주세요\");\r\n");
      out.write("                } else {\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"display\", \"none\");\r\n");
      out.write("                    $(\"#user_phone_msg\").css(\"color\", \"#001A41\");\r\n");
      out.write("                    $(\"#user_phone_msg\").html(\"연락처는 - 를 제외한 숫자만 입력해주세요\");\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_phone\").on(\"focus\", function () {\r\n");
      out.write("                phoneEvent();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            $(\"#user_phone\").on(\"keyup\", function () {\r\n");
      out.write("                phoneEvent();\r\n");
      out.write("            })\r\n");
      out.write("\r\n");
      out.write("            // 엔터 = 버튼 클릭\r\n");
      out.write("            $(\"#user_email, #user_pw, #user_pw_re, #user_phone\").on(\"keyup\", (e) => { if (e.keyCode == 13) { $(\"#btn_sign\").click() } });\r\n");
      out.write("\r\n");
      out.write("        </script>\r\n");
      out.write("    </main>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
