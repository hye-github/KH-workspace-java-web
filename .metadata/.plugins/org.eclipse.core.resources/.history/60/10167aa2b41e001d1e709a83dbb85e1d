package midlevel;

import java.util.Scanner;

// Design Pattern MVC1 = Model / View+Control
// Model View Control

public class Main {
	public static void main(String[] args) {

		// 우리가 만든 회원관리 시스템의 3가지 치명적인 문제점
		// 1. 코드 중복도가 높다	-> 상속 문법으로 해결
		// 2. 코드 결합도가 높다	-> 
		
		
		
		
		Scanner sc = new Scanner(System.in);
		Manager manager = new Manager();

		while (true) {
			System.out.println("<< 회원 관리 시스템 >>");
			System.out.println("1. 신규 회원 등록");
			System.out.println("2. 회원 정보 출력");
			System.out.print(">> ");
			int menu = Integer.parseInt(sc.nextLine());

			if (menu == 1) {

				manager.addMember(new Silver(1001, "Alice", 1000)); // 내용을 매니저에게 줘서 배열에 저장할 수 있도록 한다. 매니저에 보관이라는 기능을 만든다.
				manager.addMember(new Silver(1002, "Tom", 2000));
				manager.addMember(new Silver(1003, "Jason", 3000));
				manager.addMember(new Gold(1004, "Mike", 4000));
				manager.addMember(new Gold(1005, "Elsa", 4000));
				
			} else if (menu == 2) {
				Silver[] silverMembers = manager.getSilverMembers();
				Gold[] goldMembers = manager.getGoldMembers();
				
				System.out.println("아이디\t이름\t포인트\t보너스");
				
				for(int i = 0;i < manager.getGoldIndex();i++) {
					System.out.println(silverMembers[i].getId() + "\t" + 
										silverMembers[i].getName() + "\t" + 
										silverMembers[i].getPoint() + "\t" + 
										silverMembers[i].getBonus());
				}
				
				for(int i = 0;i < manager.getSilverIndex();i++) {
					
					System.out.println(goldMembers[i].getId() + "\t" + 
										goldMembers[i].getName() + "\t" + 
										goldMembers[i].getPoint() + "\t" + 
										goldMembers[i].getBonus());
				}
				
				
				
			}
		}
	}
}




//
//package midlevel;
//
//import java.util.Scanner;
//
//// Design Pattern MVC1 = Model / View+Control
//// Model View Control
//
//public class Main {
//	public static void main(String[] args) {
//
//		Scanner sc = new Scanner(System.in);
//		Manager manager = new Manager();
//
//		while (true) {
//			System.out.println("<< 회원 관리 시스템 >>");
//			System.out.println("1. 신규 회원 등록");
//			System.out.println("2. 회원 정보 출력");
//			System.out.print(">> ");
//			int menu = Integer.parseInt(sc.nextLine());
//
//			if (menu == 1) {
//
//				manager.addMember(new Silver(1001, "Alice", 1000)); // 내용을 매니저에게 줘서 배열에 저장할 수 있도록 한다. 매니저에 보관이라는 기능을 만든다.
//				manager.addMember(new Silver(1002, "Tom", 2000));
//				manager.addMember(new Silver(1003, "Jason", 3000));
//
//			} else if (menu == 2) {
//				Silver[] members = manager.getMembers();
//
//				System.out.println("아이디\t이름\t포인트\t보너스");
//				for(int i = 0;i < manager.getIndex();i++) {
//					System.out.println(members[i].getId() + "\t" + members[i].getName() + "\t" + members[i].getPoint() + "\t" + members[i].getBonus());
//				}
//			}
//		}
//	}
//}
