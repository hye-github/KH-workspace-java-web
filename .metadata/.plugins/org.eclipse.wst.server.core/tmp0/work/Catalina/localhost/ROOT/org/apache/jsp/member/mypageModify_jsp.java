/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.82
 * Generated at: 2022-10-19 03:23:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class mypageModify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("jar:file:/C:/Users/Administrator/Documents/develop/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BoardProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/fmt.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/C:/Users/Administrator/Documents/develop/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/BoardProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1665565130897L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- jstl 포맷라이브러리 추가 -->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        <!DOCTYPE html>\r\n");
      out.write("        <html>\r\n");
      out.write("\r\n");
      out.write("        <head>\r\n");
      out.write("            <meta charset=\"UTF-8\">\r\n");
      out.write("            <title>My page</title>\r\n");
      out.write("            <script src=\"https://code.jquery.com/jquery-3.6.1.js\"></script>\r\n");
      out.write("            <!-- CSS only -->\r\n");
      out.write("            <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\"\r\n");
      out.write("                integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\"\r\n");
      out.write("                crossorigin=\"anonymous\">\r\n");
      out.write("            <!-- JavaScript Bundle with Popper -->\r\n");
      out.write("            <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("                integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\"\r\n");
      out.write("                crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("            <script src=\"//cdn.jsdelivr.net/npm/sweetalert2@11\"></script>\r\n");
      out.write("            <script src=\"//t1.daumcdn.net/mapjsapi/bundle/postcode/prod/postcode.v2.js\"></script>\r\n");
      out.write("\r\n");
      out.write("            <style>\r\n");
      out.write("                @media (min-width: 768px) {\r\n");
      out.write("                    .container {\r\n");
      out.write("                        width: 700px;\r\n");
      out.write("                    }\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                #center {\r\n");
      out.write("                    text-align: center;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                #center>button {\r\n");
      out.write("                    margin-top: 10px;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                .container {\r\n");
      out.write("                    margin-top: 50px;\r\n");
      out.write("                    padding: 50px;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                h2 {\r\n");
      out.write("                    margin-bottom: 40px;\r\n");
      out.write("                    text-align: center;\r\n");
      out.write("                    font-weight: 700;\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("            </style>\r\n");
      out.write("        </head>\r\n");
      out.write("\r\n");
      out.write("        <body>\r\n");
      out.write("            <div class=\"container border bg-light\">\r\n");
      out.write("                <h2>My page Modify</h4>\r\n");
      out.write("\r\n");
      out.write("                <form id=\"frm\" action=\"/modify.mem\" method=\"post\">\r\n");
      out.write("            \r\n");
      out.write("            <!-- 값 중에 uri가 있어서 무조건 메서드 post 처리를 해야한다. -->\r\n");
      out.write("            \r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"id\" class=\"col-sm-3 col-form-label\">ID</label>\r\n");
      out.write("                    <div class=\"col-sm-6 col-form-label\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("                    <div class=\"col-sm-3\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"password\" class=\"col-sm-3 col-form-label\">Password</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"password\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"passwordRE\" class=\"col-sm-3 col-form-label\">PwCheck</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"password\" class=\"form-control\" id=\"passwordRE\" name=\"pw\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3\" id=\"pwresult\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"name\" class=\"col-sm-3 col-form-label\">Name</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"name\" name=\"name\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.name}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"phone\" class=\"col-sm-3 col-form-label\">Phone</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"phone\" name=\"phone\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.phone}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"email\" class=\"col-sm-3 col-form-label\">Email</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"email\" name=\"email\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.email}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"zipcode\" class=\"col-sm-3 col-form-label\">Zipcode</label>\r\n");
      out.write("                    <div class=\"col-sm-6\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"zipcode\" name=\"zipcode\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.zipcode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"col-sm-3 gy-2\">\r\n");
      out.write("                        <button type=\"button\" class=\"btn btn-primary\" onclick=\"execDaumPostcode()\">Search</button>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"address1\" class=\"col-sm-3 col-form-label\">Address1</label>\r\n");
      out.write("                    <div class=\"col-sm-9\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"address1\" name=\"address1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.address1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                    <label for=\"address2\" class=\"col-sm-3 col-form-label\">Address2</label>\r\n");
      out.write("                    <div class=\"col-sm-9\">\r\n");
      out.write("                        <input type=\"text\" class=\"form-control\" id=\"address2\" name=\"address2\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.address2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"row mb-3 gy-2\">\r\n");
      out.write("                                <label for=\"address2\" class=\"col-sm-3 col-form-label\">Signup Date</label>\r\n");
      out.write("                                <div class=\"col-sm-9 col-form-label\">");
      if (_jspx_meth_fmt_005fformatDate_005f0(_jspx_page_context))
        return;
      out.write("</div>\r\n");
      out.write("                            </div>\r\n");
      out.write("                   \r\n");
      out.write("                <div id=\"center\">\r\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-primary\">Completion Modify</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-primary\" id=\"rewrite\">Retype</button>\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-primary\" onclick=\"history.back(); return false;\">Back</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    	$(\"#frmfrm\").on(\"submit\",function(){\r\n");
      out.write("    		\r\n");
      out.write("    				\r\n");
      out.write("    		// 2. 패스워드가 일치하는가?\r\n");
      out.write("    		if(!($(\"#password\").val() == $(\"#passwordRE\").val())){\r\n");
      out.write("    			alert(\"입력한 두 패스워드가 일치하지 않습니다.\");\r\n");
      out.write("    			\r\n");
      out.write("    		}		\r\n");
      out.write("    		\r\n");
      out.write("    				\r\n");
      out.write("			// 3. 각종 필드 유효성 검사들이 정상인가?\r\n");
      out.write("			\r\n");
      out.write("			alert(\"유효성 검사 모두 통과\");\r\n");
      out.write("    		return false;\r\n");
      out.write("    	})\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("        let inputPassword = document.getElementById(\"password\");\r\n");
      out.write("        let inputPasswordRE = document.getElementById(\"passwordRE\");\r\n");
      out.write("        let inputName = document.getElementById(\"name\");\r\n");
      out.write("        let inputPhone = document.getElementById(\"phone\");\r\n");
      out.write("        let inputEmail = document.getElementById(\"email\");\r\n");
      out.write("\r\n");
      out.write("        let frm = document.getElementById(\"frm\");\r\n");
      out.write("        let reset = document.getElementById(\"rewrite\");\r\n");
      out.write("        let idCheck = document.getElementById(\"idcheck\");\r\n");
      out.write("        let pwResult = document.getElementById(\"pwresult\");\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function pwCheck() {\r\n");
      out.write("\r\n");
      out.write("            function earlyLockColor(element) {\r\n");
      out.write("                element.style.color = '#666666';\r\n");
      out.write("            }\r\n");
      out.write("            function beRightColor(element) {\r\n");
      out.write("                element.style.color = '#03c75a';\r\n");
      out.write("            }\r\n");
      out.write("            function beWrongColor(element) {\r\n");
      out.write("                element.style.color = 'red';\r\n");
      out.write("            }\r\n");
      out.write("            let pwCheck1 = inputPassword.value;\r\n");
      out.write("            let pwCheck2 = inputPasswordRE.value;\r\n");
      out.write("\r\n");
      out.write("            let passwordRegex = /[A-Za-z0-9!@#$%]{10,20}/;\r\n");
      out.write("\r\n");
      out.write("            if (pwCheck1 !== \"\" || pwCheck2 !== \"\") {\r\n");
      out.write("\r\n");
      out.write("                if (passwordRegex.test(inputPassword.value) && (pwCheck1 == pwCheck2)) {\r\n");
      out.write("                    beRightColor(pwResult);\r\n");
      out.write("                    pwResult.innerHTML = \"패스워드가 일치합니다.\";\r\n");
      out.write("                } else if (pwCheck1 == \"\" || pwCheck2 == \"\") {\r\n");
      out.write("                    earlyLockColor(pwResult);\r\n");
      out.write("                    pwResult.innerHTML = \"패스워드를 입력해주세요.\";\r\n");
      out.write("                } else if (pwCheck1 != pwCheck2) {\r\n");
      out.write("                    beWrongColor(pwResult);\r\n");
      out.write("                    pwResult.innerHTML = \"패스워드가 일치하지 않습니다.\";\r\n");
      out.write("                } else {\r\n");
      out.write("                    beWrongColor(pwResult);\r\n");
      out.write("                    pwResult.innerHTML = \"10~20자,영문대소문자,숫자,!@#$%만 허용됩니다.\";\r\n");
      out.write("                }\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        inputPassword.onkeyup = pwCheck;\r\n");
      out.write("        inputPasswordRE.onkeyup = pwCheck;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        let inputZipcode = document.getElementById(\"zipcode\");\r\n");
      out.write("        let inputAddress1 = document.getElementById(\"address1\");\r\n");
      out.write("        let inputAddress2 = document.getElementById(\"address2\");\r\n");
      out.write("\r\n");
      out.write("        reset.onclick = function () {\r\n");
      out.write("            inputPassword.value = \"\";\r\n");
      out.write("            inputPasswordRE.value = \"\";\r\n");
      out.write("            inputName.value = \"\";\r\n");
      out.write("            inputPhone.value = \"\";\r\n");
      out.write("            inputEmail.value = \"\";\r\n");
      out.write("            inputZipcode.value = \"\";\r\n");
      out.write("            inputAddress1.value = \"\";\r\n");
      out.write("            inputAddress2.value = \"\";\r\n");
      out.write("            pwResult.innerHTML = \"\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function execDaumPostcode() {\r\n");
      out.write("            new daum.Postcode({\r\n");
      out.write("                oncomplete: function (data) {\r\n");
      out.write("                    var roadAddr = data.roadAddress; // 도로명 주소 변수\r\n");
      out.write("                    var extraRoadAddr = ''; // 참고 항목 변수\r\n");
      out.write("\r\n");
      out.write("                    if (data.bname !== '' && /[동|로|가]$/g.test(data.bname)) {\r\n");
      out.write("                        extraRoadAddr += data.bname;\r\n");
      out.write("                    }\r\n");
      out.write("                    // 건물명이 있고, 공동주택일 경우 추가한다.\r\n");
      out.write("                    if (data.buildingName !== '' && data.apartment === 'Y') {\r\n");
      out.write("                        extraRoadAddr += (extraRoadAddr !== '' ? ', ' + data.buildingName : data.buildingName);\r\n");
      out.write("                    }\r\n");
      out.write("                    // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\r\n");
      out.write("                    if (extraRoadAddr !== '') {\r\n");
      out.write("                        extraRoadAddr = ' (' + extraRoadAddr + ')';\r\n");
      out.write("                    }\r\n");
      out.write("\r\n");
      out.write("                    document.getElementById(\"zipcode\").value = data.zonecode;\r\n");
      out.write("                    document.getElementById(\"address1\").value = roadAddr;\r\n");
      out.write("                }\r\n");
      out.write("            }).open();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        frm.onsubmit = function () {\r\n");
      out.write("\r\n");
      out.write("            let passwordRegex = /[A-Za-z0-9!@#$%]{10,20}/;\r\n");
      out.write("            let phoneRegex = /^0[\\d]{2}[- ]?\\d{3,4}[- ]?\\d{4}$/;\r\n");
      out.write("            let nameRegex = /[가-힣]{1,5}/;\r\n");
      out.write("            let emailRegex = /[@\\.a-zA-Z\\d]+@[a-z]+\\.[a-z]{2,3}/;\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("            if (inputPassword.value == \"\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '비밀번호 미입력!',\r\n");
      out.write("                    text: '빈칸의 내용을 입력해주세요.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (!passwordRegex.test(inputPassword.value)) {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '사용할 수 없는 비밀번호 입니다.',\r\n");
      out.write("                    html: '<h6>비밀번호는 10-20자 길이로 가능하며</h6><h6>대소문자,숫자,!,@,#,$,% 문자만 사용가능합니다.</h6>',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (inputPasswordRE.value == \"\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '비밀번호 확인 미입력!',\r\n");
      out.write("                    text: '빈칸의 내용을 입력해주세요.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (!inputPassword.value == inputPasswordRE.value) {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: 'Error!',\r\n");
      out.write("                    text: '비밀번호와 동일하게 입력되지 않았습니다.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (inputName.value == \"\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '이름 미입력!',\r\n");
      out.write("                    text: '빈칸의 내용을 입력해주세요.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (!nameRegex.test(inputName.value)) {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '사용할 수 없는 이름 입니다.',\r\n");
      out.write("                    html: '<h6>이름은 한글만 입력되며</h6><h6>1-5글자까지 입력 가능합니다.</h6>',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (inputPhone.value == \"\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '전화번호 미입력!',\r\n");
      out.write("                    text: '빈칸의 내용을 입력해주세요.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (!phoneRegex.test(inputPhone.value)) {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '사용할 수 없는 전화번호 입니다.',\r\n");
      out.write("                    html: '<h6>일반 전화 또는 휴대폰 번호 입력이 가능합니다.</h6>',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                }).then(function () {\r\n");
      out.write("                    inputPhone.focus();\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (inputEmail.value == \"\") {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '이메일 미입력!',\r\n");
      out.write("                    text: '빈칸의 내용을 입력해주세요.',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                })\r\n");
      out.write("                return false;\r\n");
      out.write("\r\n");
      out.write("            } else if (!emailRegex.test(inputEmail.value)) {\r\n");
      out.write("                Swal.fire({\r\n");
      out.write("                    title: '사용할 수 없는 이메일 주소 입니다.',\r\n");
      out.write("                    html: '<h6>이메일 양식에 맞춰 입력 가능합니다.</h6><h6>(example@example.com)</h6>',\r\n");
      out.write("                    icon: 'error',\r\n");
      out.write("                    confirmButtonText: '확인'\r\n");
      out.write("                }).then(function () {\r\n");
      out.write("                    inputPhone.focus();\r\n");
      out.write("                })\r\n");
      out.write("                return false; // submit 중지\r\n");
      out.write("\r\n");
      out.write("            } else {\r\n");
      out.write("            	\r\n");
      out.write("             //   Swal.fire({\r\n");
      out.write("             //      icon: 'success',\r\n");
      out.write("             //    	 title: '회원 가입이 완료 되었습니다.',\r\n");
      out.write("             //      showConfirmButton: false,\r\n");
      out.write("             //      timer: 1500	\r\n");
      out.write("             //  })\r\n");
      out.write("                \r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_fmt_005fformatDate_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatDate
    org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag _jspx_th_fmt_005fformatDate_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag) _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatDateTag.class);
    boolean _jspx_th_fmt_005fformatDate_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatDate_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatDate_005f0.setParent(null);
      // /member/mypageModify.jsp(126,69) name = pattern type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setPattern("yyyy년 MM월 dd일 가입");
      // /member/mypageModify.jsp(126,69) name = value type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatDate_005f0.setValue((java.util.Date) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${list.signup_date}", java.util.Date.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_fmt_005fformatDate_005f0 = _jspx_th_fmt_005fformatDate_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatDate_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatDate_0026_005fvalue_005fpattern_005fnobody.reuse(_jspx_th_fmt_005fformatDate_005f0);
      _jspx_th_fmt_005fformatDate_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatDate_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatDate_005f0_reused);
    }
    return false;
  }
}
